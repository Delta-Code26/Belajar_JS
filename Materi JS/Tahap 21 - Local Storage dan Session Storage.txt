Local Storage dan Session Storage adalah bagian dari Web Storage API yang memungkinkan kita untuk menyimpan data di browser. Data yang disimpan bersifat persisten (untuk Local Storage) atau sementara (untuk Session Storage).

==> Langkah 91: Memahami Local Storage
Local Storage memungkinkan kita untuk menyimpan data secara permanen dalam browser. Data yang disimpan akan tetap ada meskipun halaman dimuat ulang atau browser ditutup.

==> Menyimpan Data di Local Storage
Untuk menyimpan data ke Local Storage, kita menggunakan metode `setItem()`, di mana kita memberikan kunci dan nilai.

Contoh Menyimpan Data:
==============================================================================================================
localStorage.setItem("nama", "John Doe"); // Menyimpan nama
localStorage.setItem("umur", 30); // Menyimpan umur
==============================================================================================================

==> Mengambil Data dari Local Storage
Untuk mengambil data dari Local Storage, kita menggunakan metode `getItem()`.

Contoh Mengambil Data:
==============================================================================================================
const nama = localStorage.getItem("nama");
const umur = localStorage.getItem("umur");

console.log(nama); // Output: John Doe
console.log(umur); // Output: 30
==============================================================================================================

==> Menghapus Data dari Local Storage
Kita bisa menghapus data tertentu dari Local Storage menggunakan metode `removeItem()` atau menghapus semua data dengan `clear()`.

Contoh Menghapus Data:
==============================================================================================================
localStorage.removeItem("nama"); // Menghapus data nama
localStorage.clear(); // Menghapus semua data
==============================================================================================================

==> Langkah 92: Memahami Session Storage
Session Storage mirip dengan Local Storage, tetapi data yang disimpan hanya bertahan selama sesi tab browser saat ini. Jika tab ditutup, data akan hilang.

==> Menyimpan Data di Session Storage
Kita menyimpan data ke Session Storage dengan cara yang sama seperti Local Storage.

Contoh Menyimpan Data:
==============================================================================================================
sessionStorage.setItem("sessionNama", "Jane Doe"); // Menyimpan nama sesi
==============================================================================================================

==> Mengambil Data dari Session Storage
Untuk mengambil data dari Session Storage, kita menggunakan metode `getItem()`.

Contoh Mengambil Data:
==============================================================================================================
const sessionNama = sessionStorage.getItem("sessionNama");
console.log(sessionNama); // Output: Jane Doe
==============================================================================================================

==> Menghapus Data dari Session Storage
Kita bisa menghapus data tertentu dari Session Storage menggunakan metode `removeItem()` atau menghapus semua data dengan `clear()`.

Contoh Menghapus Data:
==============================================================================================================
sessionStorage.removeItem("sessionNama"); // Menghapus data sesi
sessionStorage.clear(); // Menghapus semua data sesi
==============================================================================================================

==> Langkah 93: Perbedaan antara Local Storage dan Session Storage
- Local Storage: Data bertahan tanpa batas waktu, bahkan setelah browser ditutup.
- Session Storage: Data hanya bertahan selama sesi tab browser terbuka.

==> Langkah 94: Menggunakan Local Storage untuk Menyimpan Data Pengguna
Kita bisa menggunakan Local Storage untuk menyimpan informasi pengguna, seperti preferensi tema atau data form.

Contoh Menyimpan Preferensi Tema:
==============================================================================================================
const tema = "gelap"; // Misalnya pengguna memilih tema gelap
localStorage.setItem("preferensiTema", tema);
==============================================================================================================

==> Langkah 95: Mengambil dan Menggunakan Data dari Storage
Kita bisa mengambil data dari Local Storage dan menggunakannya saat memuat halaman.

Contoh Menggunakan Data untuk Mengubah Tema:
==============================================================================================================
const preferensiTema = localStorage.getItem("preferensiTema");
if (preferensiTema) {
    document.body.classList.add(preferensiTema); // Menambahkan kelas tema ke body
}
==============================================================================================================

==> Latihan:
1. Buatlah form sederhana yang memungkinkan pengguna untuk memasukkan nama dan umur, dan simpan data tersebut ke Local Storage.
2. Ketika halaman dimuat, ambil data dari Local Storage dan tampilkan di halaman.
3. Tambahkan tombol untuk menghapus data dari Local Storage.
